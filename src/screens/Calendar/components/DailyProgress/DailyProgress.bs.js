// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
"use strict";

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/reasonReact.js");
var Title = require("./styled/Title");
var Status = require("./styled/Status");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var Container = require("./styled/Container");
var Bar = require("./styled/Stats/Bar");
var Title$1 = require("./styled/Stats/Title");
var Amount = require("./styled/Stats/Amount");
var Column = require("./styled/Stats/Column");
var Container$1 = require("./styled/Stats/Container");
var BarContainer = require("./styled/Stats/BarContainer");

function make(onLayout, children) {
  return ReasonReact.wrapJsForReason(
    Container.default,
    {
      onLayout: Js_null_undefined.from_opt(onLayout),
    },
    children
  );
}

var Container$2 = /* module */ [/* make */ make];

function make$1(children) {
  return ReasonReact.wrapJsForReason(Title.default, {}, children);
}

var Title$2 = /* module */ [/* make */ make$1];

function make$2(children) {
  return ReasonReact.wrapJsForReason(Status.default, {}, children);
}

var Status$1 = /* module */ [/* make */ make$2];

function make$3(parentContainerWidth, children) {
  return ReasonReact.wrapJsForReason(
    Container$1.default,
    {
      parentContainerWidth: parentContainerWidth,
    },
    children
  );
}

var Container$3 = /* module */ [/* make */ make$3];

function make$4(center, children) {
  return ReasonReact.wrapJsForReason(
    Column.default,
    {
      center: Js_null_undefined.from_opt(center),
    },
    children
  );
}

var Column$1 = /* module */ [/* make */ make$4];

function make$5(onLayout, children) {
  return ReasonReact.wrapJsForReason(
    BarContainer.default,
    {
      onLayout: Js_null_undefined.from_opt(onLayout),
    },
    children
  );
}

var BarContainer$1 = /* module */ [/* make */ make$5];

function make$6(width, children) {
  return ReasonReact.wrapJsForReason(
    Bar.default,
    {
      width: width,
    },
    children
  );
}

var Bar$1 = /* module */ [/* make */ make$6];

function make$7(children) {
  return ReasonReact.wrapJsForReason(Title$1.default, {}, children);
}

var Title$3 = /* module */ [/* make */ make$7];

function make$8(children) {
  return ReasonReact.wrapJsForReason(Amount.default, {}, children);
}

var Amount$1 = /* module */ [/* make */ make$8];

var Stats = /* module */ [
  /* Container */ Container$3,
  /* Column */ Column$1,
  /* BarContainer */ BarContainer$1,
  /* Bar */ Bar$1,
  /* Title */ Title$3,
  /* Amount */ Amount$1,
];

var Styled = /* module */ [
  /* Container */ Container$2,
  /* Title */ Title$2,
  /* Status */ Status$1,
  /* Stats */ Stats,
];

var component = ReasonReact.reducerComponent("DailyProgressFacet");

function make$9(currentWorkout, parentContainerWidth, _) {
  var newrecord = component.slice();
  newrecord[/* render */ 9] = function(self) {
    return ReasonReact.element(
      /* None */ 0,
      /* None */ 0,
      make$3(
        parentContainerWidth,
        /* array */ [
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$4(
              /* None */ 0,
              /* array */ [
                currentWorkout.map(function(rf, i) {
                  return ReasonReact.element(
                    /* Some */ [Pervasives.string_of_int(i)],
                    /* None */ 0,
                    make$7(/* array */ [rf[/* name */ 0]])
                  );
                }),
              ]
            )
          ),
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$4(
              /* Some */ [/* true */ 1],
              /* array */ [
                currentWorkout.map(function(rf, i) {
                  return ReasonReact.element(
                    /* Some */ [Pervasives.string_of_int(i)],
                    /* None */ 0,
                    make$5(
                      /* Some */ [
                        Curry._1(self[/* reduce */ 3], function($$event) {
                          return /* MeasureMaxBarWidth */ [
                            $$event.nativeEvent.layout.width,
                          ];
                        }),
                      ],
                      /* array */ [
                        ReasonReact.element(
                          /* None */ 0,
                          /* None */ 0,
                          make$6(
                            self[/* state */ 4][/* maxBarWidth */ 0] *
                              (rf[/* amountCompleted */ 1] / rf[/* max */ 2]),
                            /* array */ []
                          )
                        ),
                      ]
                    )
                  );
                }),
              ]
            )
          ),
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$4(
              /* None */ 0,
              /* array */ [
                currentWorkout.map(function(rf, i) {
                  var match = +(rf[/* name */ 0] === "running");
                  var tmp;
                  if (match !== 0) {
                    var match$1 = +(rf[/* amountCompleted */ 1] > 0);
                    tmp =
                      match$1 !== 0
                        ? Pervasives.string_of_float(
                            rf[/* amountCompleted */ 1]
                          ) + "km"
                        : Pervasives.string_of_int(
                            rf[/* amountCompleted */ 1] | 0
                          ) + " km";
                  } else {
                    tmp = Pervasives.string_of_int(
                      rf[/* amountCompleted */ 1] | 0
                    );
                  }
                  return ReasonReact.element(
                    /* Some */ [Pervasives.string_of_int(i)],
                    /* None */ 0,
                    make$8(/* array */ [tmp])
                  );
                }),
              ]
            )
          ),
        ]
      )
    );
  };
  newrecord[/* initialState */ 10] = function() {
    return /* record */ [/* maxBarWidth */ 0];
  };
  newrecord[/* reducer */ 12] = function(action, _) {
    return /* Update */ Block.__(0, [
      /* record */ [/* maxBarWidth */ action[0]],
    ]);
  };
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, function(jsProps) {
  return make$9(
    jsProps.currentWorkout,
    jsProps.parentContainerWidth,
    /* array */ []
  );
});

var Stats$1 = /* module */ [
  /* component */ component,
  /* make */ make$9,
  /* default */ $$default,
];

var component$1 = ReasonReact.reducerComponent("DailyProgress");

function make$10() {
  var newrecord = component$1.slice();
  newrecord[/* render */ 9] = function(self) {
    var workout = /* array */ [
      /* record */ [
        /* name */ "push-ups",
        /* amountCompleted */ 75,
        /* max */ 100,
      ],
      /* record */ [
        /* name */ "sit-ups",
        /* amountCompleted */ 75,
        /* max */ 100,
      ],
      /* record */ [
        /* name */ "squats",
        /* amountCompleted */ 75,
        /* max */ 100,
      ],
      /* record */ [
        /* name */ "running",
        /* amountCompleted */ 2.3,
        /* max */ 10,
      ],
    ];
    var totalComplete = [0];
    var max = [0];
    workout.forEach(function(rf) {
      totalComplete[0] += rf[/* amountCompleted */ 1];
      max[0] += rf[/* max */ 2];
      return /* () */ 0;
    });
    var percComplete = totalComplete[0] / max[0] * 100;
    return ReasonReact.element(
      /* None */ 0,
      /* None */ 0,
      make(
        /* Some */ [
          Curry._1(self[/* reduce */ 3], function($$event) {
            return /* MeasureContainerWidth */ Block.__(0, [
              $$event.nativeEvent.layout.width,
            ]);
          }),
        ],
        /* array */ [
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$1(/* array */ ["today's workout"])
          ),
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$2(
              /* array */ [
                Pervasives.string_of_int(percComplete | 0) + "% complete",
              ]
            )
          ),
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$9(
              workout,
              self[/* state */ 4][/* containerWidth */ 0],
              /* array */ []
            )
          ),
        ]
      )
    );
  };
  newrecord[/* initialState */ 10] = function() {
    return /* record */ [/* containerWidth */ 0, /* maxBarWidth */ 0];
  };
  newrecord[/* reducer */ 12] = function(action, state) {
    if (action.tag) {
      return /* Update */ Block.__(0, [
        /* record */ [
          /* containerWidth */ state[/* containerWidth */ 0],
          /* maxBarWidth */ action[0],
        ],
      ]);
    } else {
      return /* Update */ Block.__(0, [
        /* record */ [
          /* containerWidth */ action[0],
          /* maxBarWidth */ state[/* maxBarWidth */ 1],
        ],
      ]);
    }
  };
  return newrecord;
}

var $$default$1 = ReasonReact.wrapReasonForJs(component$1, function() {
  return make$10(/* array */ []);
});

exports.Styled = Styled;
exports.Stats = Stats$1;
exports.component = component$1;
exports.make = make$10;
exports.$$default = $$default$1;
exports.default = $$default$1;
exports.__esModule = true;
/* component Not a pure module */
