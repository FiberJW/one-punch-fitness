// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
"use strict";

var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Name = require("./styled/Name");
var Amount = require("./styled/Amount");
var Container = require("./styled/Container");

function make(children) {
  return ReasonReact.wrapJsForReason(Container.default, {}, children);
}

var Container$1 = /* module */ [/* make */ make];

function make$1(children) {
  return ReasonReact.wrapJsForReason(Amount.default, {}, children);
}

var Amount$1 = /* module */ [/* make */ make$1];

function make$2(children) {
  return ReasonReact.wrapJsForReason(Name.default, {}, children);
}

var Name$1 = /* module */ [/* make */ make$2];

var Styled = /* module */ [
  /* Container */ Container$1,
  /* Amount */ Amount$1,
  /* Name */ Name$1,
];

var component = ReasonReact.statelessComponent("RoutineFacet");

function make$3(
  name,
  $staropt$star,
  $staropt$star$1,
  $staropt$star$2,
  $staropt$star$3,
  $staropt$star$4,
  _
) {
  var sets = $staropt$star ? $staropt$star[0] : 0;
  var reps = $staropt$star$1 ? $staropt$star$1[0] : 0;
  var distance = $staropt$star$2 ? $staropt$star$2[0] : 0;
  var units = $staropt$star$3 ? $staropt$star$3[0] : "km";
  var amount = $staropt$star$4 ? $staropt$star$4[0] : 0;
  var newrecord = component.slice();
  newrecord[/* render */ 9] = function() {
    var tmp;
    var exit = 0;
    switch (name) {
      case "run":
        tmp = ReasonReact.element(
          /* None */ 0,
          /* None */ 0,
          make$1(/* array */ [Pervasives.string_of_int(distance) + units])
        );
        break;
      case "rest":
      case "transition":
        exit = 1;
        break;
      default:
        tmp = ReasonReact.element(
          /* None */ 0,
          /* None */ 0,
          make$1(
            /* array */ [
              Pervasives.string_of_int(sets) +
                ("x" + Pervasives.string_of_int(reps)),
            ]
          )
        );
    }
    if (exit === 1) {
      tmp = ReasonReact.element(
        /* None */ 0,
        /* None */ 0,
        make$1(/* array */ [Pervasives.string_of_int(amount) + units])
      );
    }
    return ReasonReact.element(
      /* None */ 0,
      /* None */ 0,
      make(
        /* array */ [
          tmp,
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            make$2(/* array */ [" " + name])
          ),
        ]
      )
    );
  };
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, function(jsProps) {
  return make$3(
    jsProps.name,
    /* Some */ [jsProps.sets],
    /* Some */ [jsProps.reps],
    /* Some */ [jsProps.distance],
    /* Some */ [jsProps.units],
    /* Some */ [jsProps.amount],
    /* array */ []
  );
});

exports.Styled = Styled;
exports.component = component;
exports.make = make$3;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
