// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
"use strict";

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Colors = require("../../config/Colors.bs.js");
var Routines = require("../../config/Routines.bs.js");
var Reductive = require("reductive/src/reductive.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Progenitor = require("../../state/Progenitor.bs.js");
var NPMBindings = require("../../config/NPMBindings.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var DailyProgress = require("./components/DailyProgress/DailyProgress.bs.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var Dimensions$BsReactNative = require("bs-react-native/src/dimensions.js");
var ScrollView$BsReactNative = require("bs-react-native/src/components/scrollView.js");

var baseComponent = ReasonReact.statelessComponent("CalendarScreenBase");

function percComplete(workout) {
  var match = workout[/* setsCompleted */ 4][/* run */ 3];
  return (
    (workout[/* setsCompleted */ 4][/* pushUps */ 0] /
      Caml_array.caml_array_get(
        Routines.variations,
        workout[/* level */ 0]
      )[/* pushUps */ 0][/* sets */ 0] +
      workout[/* setsCompleted */ 4][/* sitUps */ 1] /
        Caml_array.caml_array_get(
          Routines.variations,
          workout[/* level */ 0]
        )[/* sitUps */ 1][/* sets */ 0] +
      workout[/* setsCompleted */ 4][/* squats */ 2] /
        Caml_array.caml_array_get(
          Routines.variations,
          workout[/* level */ 0]
        )[/* squats */ 2][/* sets */ 0] +
      (match !== 0 ? 1 : 0)) /
    4 *
    100
  );
}

function baseMake(reductiveState, _, _$1) {
  var newrecord = baseComponent.slice();
  newrecord[/* render */ 9] = function() {
    var hist = $$Array.append(
      /* array */ [reductiveState[/* currentWorkout */ 0]],
      reductiveState[/* history */ 1]
    );
    var markedDates = {};
    hist.forEach(function(w) {
      var progress = percComplete(w);
      if (progress > 75) {
        markedDates[w[/* date */ 1]] = {
          startingDay: true,
          color: Colors.start,
          endingDay: true,
          textColor: Colors.spotiBlack,
        };
        return /* () */ 0;
      } else if (progress > 50) {
        markedDates[w[/* date */ 1]] = {
          startingDay: true,
          color: "orange",
          endingDay: true,
          textColor: Colors.spotiBlack,
        };
        return /* () */ 0;
      } else {
        markedDates[w[/* date */ 1]] = {
          startingDay: true,
          color: "red",
          endingDay: true,
          textColor: "white",
        };
        return /* () */ 0;
      }
    });
    return ReasonReact.element(
      /* None */ 0,
      /* None */ 0,
      ScrollView$BsReactNative.make(
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* Some */ [
          Style$BsReactNative.style(
            /* :: */ [
              Style$BsReactNative.flexGrow(1),
              /* :: */ [
                Style$BsReactNative.paddingVertical(/* Pt */ Block.__(0, [16])),
                /* :: */ [
                  Style$BsReactNative.alignItems(/* Center */ 2),
                  /* [] */ 0,
                ],
              ],
            ]
          ),
        ],
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* Some */ [/* false */ 0],
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0,
        /* None */ 0
      )(
        /* array */ [
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            Curry.app(NPMBindings.RNCalendars[/* Calendar */ 0][/* make */ 0], [
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              /* None */ 0,
              markedDates,
              /* Some */ [
                Style$BsReactNative.style(
                  /* :: */ [
                    Style$BsReactNative.width(
                      /* Pt */ Block.__(0, [
                        (Dimensions$BsReactNative.get(/* window */ -762539024)
                          .width -
                          32) |
                          0,
                      ])
                    ),
                    /* :: */ [Style$BsReactNative.flex(0), /* [] */ 0],
                  ]
                ),
              ],
              /* Some */ ["period"],
              /* array */ [],
            ])
          ),
          ReasonReact.element(
            /* None */ 0,
            /* None */ 0,
            DailyProgress.make(
              reductiveState[/* currentWorkout */ 0],
              percComplete(reductiveState[/* currentWorkout */ 0]),
              /* array */ []
            )
          ),
        ]
      )
    );
  };
  return newrecord;
}

var make = Reductive.Provider[/* createMake */ 0](
  /* None */ 0,
  Progenitor.store
);

var Provider = /* module */ [/* make */ make];

var component = ReasonReact.statelessComponent("WorkoutScreen");

function make$1() {
  var newrecord = component.slice();
  newrecord[/* render */ 9] = function() {
    return ReasonReact.element(
      /* None */ 0,
      /* None */ 0,
      Curry._2(make, baseMake, /* array */ [])
    );
  };
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, function() {
  return make$1(/* array */ []);
});

exports.baseComponent = baseComponent;
exports.percComplete = percComplete;
exports.baseMake = baseMake;
exports.Provider = Provider;
exports.component = component;
exports.make = make$1;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* baseComponent Not a pure module */
